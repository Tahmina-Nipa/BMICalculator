import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class BMICalculator extends JFrame {

    private JTextField weightField, feetField, inchField;
    private JLabel resultLabel, adviceLabel;

    public BMICalculator() {
        setTitle("BMI Calculator");
        setSize(450, 330);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());

        GridBagConstraints gbc = new GridBagConstraints();

        JLabel titleLabel = new JLabel("BMI Calculator");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 22));
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.insets = new Insets(10, 10, 20, 10);
        add(titleLabel, gbc);

        gbc.gridwidth = 1;
        gbc.insets = new Insets(5, 10, 5, 10);

        // Weight input
        gbc.gridx = 0;
        gbc.gridy = 1;
        add(new JLabel("Weight (kg):"), gbc);

        weightField = new JTextField(10);
        gbc.gridx = 1;
        gbc.gridwidth = 2;
        add(weightField, gbc);

        gbc.gridwidth = 1;

        // Height input (feet)
        gbc.gridx = 0;
        gbc.gridy = 2;
        add(new JLabel("Height:"), gbc);

        feetField = new JTextField(5);
        gbc.gridx = 1;
        add(feetField, gbc);
        add(new JLabel("ft"), gbc);

        inchField = new JTextField(5);
        gbc.gridx = 2;
        add(inchField, gbc);
        add(new JLabel("in"), gbc);

        // Calculate button
        JButton calcButton = new JButton("Calculate BMI");
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 3;
        add(calcButton, gbc);

        // Result label
        resultLabel = new JLabel("Your BMI will appear here.");
        resultLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        gbc.gridy = 4;
        add(resultLabel, gbc);

        // Advice label
        adviceLabel = new JLabel("Health advice will appear here.");
        adviceLabel.setFont(new Font("Arial", Font.ITALIC, 13));
        adviceLabel.setForeground(Color.BLUE);
        gbc.gridy = 5;
        add(adviceLabel, gbc);

        // Action listener
        calcButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                calculateBMI();
            }
        });
    }

    private void calculateBMI() {
        try {
            double weight = Double.parseDouble(weightField.getText());
            int feet = Integer.parseInt(feetField.getText());
            int inches = Integer.parseInt(inchField.getText());

            if (weight <= 0 || feet < 0 || inches < 0) {
                throw new NumberFormatException();
            }

            // Convert height to meters
            double heightM = (feet * 0.3048) + (inches * 0.0254);

            double bmi = weight / (heightM * heightM);
            String category = "";
            String advice = "";

            if (bmi < 18.5) {
                category = "Underweight";
                advice = "You are underweight. Consider a balanced diet.";
                adviceLabel.setForeground(Color.BLUE);
            } else if (bmi < 24.9) {
                category = "Normal";
                advice = "Your weight is normal. Keep it up!";
                adviceLabel.setForeground(new Color(0, 128, 0)); // green
            } else if (bmi < 29.9) {
                category = "Overweight";
                advice = "You are overweight. Consider regular exercise.";
                adviceLabel.setForeground(Color.ORANGE);
            } else {
                category = "Obese";
                advice = "You are obese. Please consult a doctor.";
                adviceLabel.setForeground(Color.RED);
            }

            resultLabel.setText(String.format("BMI: %.2f (%s)", bmi, category));
            adviceLabel.setText(advice);

        } catch (NumberFormatException e) {
            resultLabel.setText("Invalid input!");
            adviceLabel.setText("Please enter valid numbers.");
            adviceLabel.setForeground(Color.RED);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new BMICalculator().setVisible(true);
        });
    }
}
